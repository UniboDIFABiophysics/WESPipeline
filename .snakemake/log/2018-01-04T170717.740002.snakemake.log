Building DAG of jobs...
Provided cores: 32
Rules claiming more threads will be scaled down.
Job counts:
	count	jobs
	1	all
	4	two
	5

rule two:
    input: /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/56.txt
    output: /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/56.tsv
    jobid: 1
    wildcards: sample=56


rule two:
    input: /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/78.txt
    output: /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/78.tsv
    jobid: 4
    wildcards: sample=78


rule two:
    input: /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/12.txt
    output: /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/12.tsv
    jobid: 2
    wildcards: sample=12


rule two:
    input: /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/34.txt
    output: /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/34.tsv
    jobid: 3
    wildcards: sample=34

Finished job 1.
1 of 5 steps (20%) done
Finished job 4.
2 of 5 steps (40%) done
Finished job 2.
3 of 5 steps (60%) done
Finished job 3.
4 of 5 steps (80%) done

localrule all:
    input: /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/12.tsv, /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/34.tsv, /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/56.tsv, /home/PERSONALE/eugenio.fonzi2/ANALYSES_WES/provina1/78.tsv
    jobid: 0

Finished job 0.
5 of 5 steps (100%) done
